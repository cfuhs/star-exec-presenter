<h1>Overview of job-results
<a href=@{FlexibleTableR (Query []) jids}>flexible query (experimental)
|
<a href=@{ProblemsR False jids}>consistency check
| view original jobs on star-exec:
$forall jid <- getIds jids
  $if isStarExecID jid
    <a href="https://www.starexec.org/starexec/secure/details/job.jsp?id=#{getStarExecId jid}">#{getStarExecId jid},
|
<a href=@{ConceptsR 0 (Ids []) jids}>concepts

<h2>Statistics
#{stat}

<h2>Results

<p>
  also available in CSV format:
  <a href=@{ShowManyJobResultsCSVR False NoQuery jids}>
    terse (just results)
  ,
  <a href=@{ShowManyJobResultsCSVR True NoQuery jids}>
    verbose (results, times, size)

<div class="container">
  <input type="checkbox" id="legend">
  <div class="container">
    <label for="legend" class="a">Legend
    <div class="checked-container">
      <h3>Legend
      <div>
        <table class="table legend">
          <tbody>
            <tr>
              <td class="solver-yes">YES
              <td class="solver-no">NO
              <td class="solver-maybe">MAYBE
              <td class="solver-certified">CERTIFIED
              <td class="solver-error">ERROR
              <td class="solver-bounds">BOUNDS
              <td class="solver-other">OTHER
              <td class="solver-nothing">NOTHING
        The results are displayed in the following pattern:
        <code>result | cpu-time/wallclock-time in seconds | complexity-score


<table class="table">
  <thead>
    <tr>
      <th>Jobs
      $forall (jobInfo,i) <- zip jobInfos $ map length groupedSolvers
        <th colspan="#{i}">
          <a href=@{ShowJobInfoR $ toJobID jobInfo}>#{toJobName jobInfo}
    <tr>
      <th>Solver
      $forall (_, (sId, sName)) <- jobSolvers
        <th>
          <a href=@{ShowSolverInfoR sId}>#{sName}
    <tr>
      <th>Scores
      $forall (solvers, scores) <- zip groupedSolvers scores
        $forall (sId,_) <- solvers
          <th>
            $maybe score <- M.lookup sId scores
              #{score}
            $nothing
              0
  <tbody>
    $forall ((bKey,bName), results) <- benchmarkResults
      <tr>
        <td>
          $case bKey
            $of Left bId
              <a href=@{ShowBenchmarkInfoR bId}>#{shorten bName}
            $of Right doi
             <a href=@{ResolveR doi}>#{shorten bName}

        $forall mResult <- results
          $maybe result <- mResult
            <td class="#{getClass result}">
              $if isResultComplete result
                <a class="pair-link" href=@{ShowJobPairR (getPairID result)}>
                  #{short $ getSolverResult result }
                  <span style="opacity:0.5">
                    #{toFixed 1 $ toCpuTime result} /
                    #{toFixed 1 $ toWallclockTime result}
                  $if complexity
                    $maybe score <- toScore result
                      &nbsp;(#{getScore result})
                    $nothing
                      &nbsp;(-)
              $else
                not finished
          $nothing
            <td>
